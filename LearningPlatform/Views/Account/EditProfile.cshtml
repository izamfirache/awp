@model LearningPlatform.Models.Users.EditProfileUserModel
@{
    ViewBag.Title = "Edit Profile";
}

@using (Html.BeginForm("EditProfile", "Account", FormMethod.Post, new { @class = "form-horizontal constrained edit-profile", enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <h3>@ViewBag.Title</h3>
    <hr /><br>

    <div class="form-group">
        @Html.LabelFor(m => m.Username, "Username", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Username, new { @readonly = "readonly", @class = "form-control", value = Model.Username })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", value = Model.Email  })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NewAvatar, "Change avatar", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @{
                var baseUrl = Request.GetBaseUrl();
                var imageUrl = baseUrl + "api/users/" + Session["LoggedInUserId"] + "/avatar";
            }
            <img src="@imageUrl" class="avatar img-circle img-responsive">

            @Html.TextBoxFor(m => m.NewAvatar, new { type = "file", @class = "btn" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.CurrentPassword, "Current password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.CurrentPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CurrentPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NewPassword, "New password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmNewPassword, "Confirm new password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmNewPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ConfirmNewPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10 text-right">
            <input type="submit" value="Save changes" class="btn btn-primary clearfix" />
        </div>
    </div>
}
